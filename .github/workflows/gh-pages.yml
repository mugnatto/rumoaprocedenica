name: Deploy Landing Page

on:
  workflow_dispatch:
    inputs:
      PAYMENT_URL:
        description: "URL de pagamento (Hotmart, etc.)"
        required: true
        default: "https://docs.google.com/forms/d/e/1FAIpQLSctClV5fHLDJ_YODtDkvq09qpLpW3jtWWHlzvQOEHe0cMDazQ/viewform"
      VALOR_ORIGINAL:
        description: "HTML completo para o valor original"
        required: false
        default: "<p class='text-xl font-semibold mb-2 text-gray-500'>Valor oficial: <s class='text-red-500'>R$ 5000,00</s></p>"
      DATA_OFERTA:
        description: "HTML da data da oferta"
        required: false
        default: "<p class='text-lg font-semibold uppercase text-indigo-600'>OFERTA ESPECIAL ‚Äì v√°lida at√© xx/xx</p>"
      OFFER_PARCELADO:
        description: "HTML da oferta parcelada"
        required: false
        default: "<p class='text-4xl font-black my-4'>12x de R$ 250,00</p>"
      OFFER_A_VISTA:
        description: "HTML da oferta √† vista"
        required: false
        default: "<p class='text-gray-500 mb-6'>ou R$ 2970,00 √† vista</p>"

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.upload.outputs.artifact-path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Replace placeholders with manual inputs
        run: |
          echo "${{ github.event.inputs.PAYMENT_URL }}" > temp1.txt
          echo "${{ github.event.inputs.VALOR_ORIGINAL }}" > temp2.txt
          echo "${{ github.event.inputs.DATA_OFERTA }}" > temp3.txt
          echo "${{ github.event.inputs.OFFER_PARCELADO }}" > temp4.txt
          echo "${{ github.event.inputs.OFFER_A_VISTA }}" > temp5.txt

          sed -i "s|{{ PAYMENT_URL }}|$(cat temp1.txt)|g" index.html
          sed -i "s|{{ VALOR_ORIGINAL }}|$(cat temp2.txt)|g" index.html
          sed -i "s|{{ DATA_OFERTA }}|$(cat temp3.txt)|g" index.html
          sed -i "s|{{ OFFER_PARCELADO }}|$(cat temp4.txt)|g" index.html
          sed -i "s|{{ OFFER_A_VISTA }}|$(cat temp5.txt)|g" index.html

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Set output
        run: echo "artifact-path=." >> $GITHUB_OUTPUT
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post deployment summary
        run: echo "üöÄ Deploy conclu√≠do! Acesse a p√°gina em: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY

  approval:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Approval step
        run: echo "Aguardando aprova√ß√£o para deploy em produ√ß√£o..."

  deploy-to-s3:
    needs: approval
    runs-on: ubuntu-latest
    if: ${{ needs.approval.result == 'success' }}
    env:
      AWS_REGION: sa-east-1
      BUCKET_NAME: ${{ vars.TF_VAR_bucket_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Replace placeholders with manual inputs (S3)
        run: |
          echo "${{ github.event.inputs.PAYMENT_URL }}" > temp1.txt
          echo "${{ github.event.inputs.VALOR_ORIGINAL }}" > temp2.txt
          echo "${{ github.event.inputs.DATA_OFERTA }}" > temp3.txt
          echo "${{ github.event.inputs.OFFER_PARCELADO }}" > temp4.txt
          echo "${{ github.event.inputs.OFFER_A_VISTA }}" > temp5.txt

          sed -i "s|{{ PAYMENT_URL }}|$(cat temp1.txt)|g" index.html
          sed -i "s|{{ VALOR_ORIGINAL }}|$(cat temp2.txt)|g" index.html
          sed -i "s|{{ DATA_OFERTA }}|$(cat temp3.txt)|g" index.html
          sed -i "s|{{ OFFER_PARCELADO }}|$(cat temp4.txt)|g" index.html
          sed -i "s|{{ OFFER_A_VISTA }}|$(cat temp5.txt)|g" index.html

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deploy-role
          aws-region: sa-east-1

      - name: Deploy to S3
        run: |
          aws s3 sync . s3://$BUCKET_NAME/ --delete \
            --exclude ".git/*" \
            --exclude ".github/*" \
            --exclude "terraform/*" \
            --exclude ".gitignore*" \
            --exclude "images/*"
          echo "‚úÖ Copy successful!" >> $GITHUB_STEP_SUMMARY
          echo "üåê S3 Website URL: http://${BUCKET_NAME}.s3-website-sa-east-1.amazonaws.com" >> $GITHUB_STEP_SUMMARY

      - name: Unpublish GitHub Pages
        if: always()
        run: |
          gh api --method DELETE repos/${{ github.repository }}/pages --silent || echo "Nenhuma publica√ß√£o ativa do GitHub Pages para remover."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Cloudflare Custom Domain in Summary
        run: |
          echo "üåê Cloudflare Custom Domain: https://${CUSTOM_DOMAIN}.${DOMAIN}" >> $GITHUB_STEP_SUMMARY
        env:
          CUSTOM_DOMAIN: ${{ vars.CUSTOM_DOMAIN }}
          DOMAIN: ${{ vars.DOMAIN }}
