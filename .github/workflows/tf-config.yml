name: 'Terraform Test'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    env:
      TF_VAR_AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      TF_VAR_bucket_name: ${{ vars.TF_VAR_bucket_name }}
      TF_VAR_sns_email: ${{ vars.TF_VAR_sns_email }}
      TF_VAR_region: ${{ vars.TF_VAR_region }}
    
    defaults:
      run:
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/gha-deploy-role
        audience: sts.amazonaws.com
        aws-region: sa-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Plan
      run: terraform plan
      if: github.event_name == 'pull_request'

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - name: Show S3 Site URL in Summary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        S3_URL=$(terraform output -raw s3_site_url)
        echo "🌐 S3 Site URL: $S3_URL" >> $GITHUB_STEP_SUMMARY

    - name: Show Cloudflare Custom Domain in Summary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        CLOUDFLARE_DOMAIN=$(terraform output -raw cloudflare_custom_domain_url)
        echo "🌐 Cloudflare Custom Domain: $CLOUDFLARE_DOMAIN" >> $GITHUB_STEP_SUMMARY